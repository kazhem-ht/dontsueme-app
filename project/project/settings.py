"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os
import sys
from os.path import join, dirname, abspath
import logging
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

PROJECT_DIR = dirname(BASE_DIR)

env_path = join(PROJECT_DIR, ".env")
load_dotenv(env_path)

Log_Format = "%(levelname)s %(asctime)s - %(message)s"

logging.basicConfig(stream=sys.stdout,
                    filemode="w",
                    format=Log_Format,
                    level=logging.INFO)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv(
    "SECRET_KEY", "django-insecure-iex560z2^#h18ea%w&ev3-tpad!$f=fb)!ca@aa@&3*8gnw^2d")

# SECURITY WARNING: don't run with debug turned on in production!
env_debug = os.getenv("APP_DEBUG", 'True')
if env_debug.lower() in ['true', 'false']:
    DEBUG = eval(env_debug.lower().title())
else:
    DEBUG = False
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "*").split(",")
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "mozilla_django_oidc",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "bootstrap4",
    "common",
    "reports"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    # ...
]

ROOT_URLCONF = "project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": f"{os.getenv('DB_DIR', BASE_DIR)}/db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    { "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

LOGIN_REDIRECT_URL = "common:index"
LOGOUT_REDIRECT_URL = "common:index"


#### APP settings
DJANGO_SU_NAME = os.getenv('DEFAULT_SUPERUSER_NAME', 'dontsueme')
DJANGO_SU_EMAIL = os.getenv('DEFAULT_SUPERUSER_EMAIL', 'dont@sue.me')
DJANGO_SU_PASSWORD = os.getenv('DEFAULT_SUPERUSER_PASSWORD', 'dontsueme')


YC_LOCKBOX_SECRET_ID = os.getenv('YC_LOCKBOX_SECRET_ID', None)
# by default should be claimed from meta
YC_IAM_TOKEN = os.getenv("YC_IAM_TOKEN", None)
YC_IAM_TOKEN_METADATA_URL = os.getenv("IAM_TOKEN_URL",
                                      "http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token")

S3_KEY = os.getenv("S3_KEY", None)  # format ACCESS_KEY:SECRET_KEY
S3_REGION = os.getenv("S3_REGION", "ru-central1")
S3_ENDPOINT_URL = os.getenv(
    "S3_ENDPOINT_URL", "https://storage.yandexcloud.net")
S3_BUCKET_NAME= os.getenv("S3_BUCKER_NAME", "yc-auth-test")
S3_BUCKET_FOLDER=os.getenv("S3_BUCKET_FOLDER", "reports")
S3_METADATA_FILENAME = os.getenv("S3_METADATA_FILENAME", "metadata.json")


OIDC_ENABLED = False
env_oidc = os.getenv("OIDC_ENABLED", 'False')
if env_oidc.lower() in ['true', 'false']:
    OIDC_ENABLED = eval(env_oidc.lower().title())
else:
    OIDC_ENABLED = False

if OIDC_ENABLED:
    AUTHENTICATION_BACKENDS.append("common.auth.MyAuthenticationBackend")

OIDC_BUTTON_NAME = os.getenv("OIDC_BUTTON_NAME", "OIDC")

OIDC_RP_CLIENT_ID = os.getenv("OIDC_CLIENT_ID", "dontsueme-app")
OIDC_RP_CLIENT_SECRET = os.getenv("OIDC_CLIENT_SECRET", None)
OIDC_RP_SIGN_ALGO = os.getenv("OIDC_SIGN_ALGO", "RS256")

# GET from https://{keycloakhost}:{keycloakport}/realms/{realm}/.well-known/openid-configuration
OIDC_OP_AUTHORIZATION_ENDPOINT = os.getenv("OIDC_AUTHORIZATION_ENDPOINT", None)
OIDC_OP_TOKEN_ENDPOINT = os.getenv("OIDC_TOKEN_ENDPOINT", None)
OIDC_OP_USER_ENDPOINT = os.getenv("OIDC_USER_ENDPOINT", None)
OIDC_OP_JWKS_ENDPOINT = os.getenv("OIDC_JWKS_ENDPOINT", None)
